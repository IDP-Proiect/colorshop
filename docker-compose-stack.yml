version: "3.8"

services:
    auth-service:
        image: baciugeorge/auth-service
        environment:
            NODE_ENV: development
        secrets:
            - DATABASE_URL
            - JWT_SECRET
        deploy:
            replicas: 3
            placement:
                max_replicas_per_node: 2
            update_config:
                parallelism: 2
                order: start-first
            rollback_config:
                parallelism: 2
                order: stop-first
        networks:
            - internal
  
    product-service:
        image: baciugeorge/product-service
        deploy:
            replicas: 3
            placement:
                max_replicas_per_node: 2
            update_config:
                order: start-first
            rollback_config:
                order: stop-first
        networks:
            - internal

    postgres:
      image: postgres:latest
      hostname: postgres
      ports:
        - 5432:5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: Todo
      deploy:
        placement:
            constraints:
                - "node.role==manager"
      volumes:
        - postgres-data:/var/lib/postgresql/data
      restart: unless-stopped
      networks:
        - internal
        - database
        - database-admin

    pgadmin:
      image: dpage/pgadmin4
      depends_on:
        - postgres
      ports:
        - 5555:80
      environment:
        PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
        PGADMIN_DEFAULT_PASSWORD: admin
      deploy:
        placement:
            constraints:
                - "node.role==manager"
      volumes:
        - pgadmin-data:/var/lib/pgadmin
      restart: unless-stopped
      networks:
        - internal
        - database
        - database-admin

    fs-service:
      image: baciugeorge/fs-service
      deploy:
          replicas: 3
          placement:
              max_replicas_per_node: 2
          update_config:
              order: start-first
          rollback_config:
              order: stop-first
      networks:
          - internal

    order-service:
      image: baciugeorge/order-service
      environment:
        DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/Todo?schema=public"
      deploy:
          replicas: 3
          placement:
              max_replicas_per_node: 2
          update_config:
              order: start-first
          rollback_config:
              order: stop-first
      networks:
          - internal

    kong:
      image: kong:latest
      volumes:
        - ./kong:/usr/local/kong/declarative # injectarea fișierului de configurare la calea specificată
      environment:
        KONG_DATABASE: 'off' # obligatoriu, dacă se vrea modul DB-less
        KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml # trebuie specificat unde anume se va găsi fișierul de configurare
        KONG_PROXY_ACCESS_LOG: /dev/stdout
        KONG_ADMIN_ACCESS_LOG: /dev/stdout
        KONG_PROXY_ERROR_LOG: /dev/stderr
        KONG_ADMIN_ERROR_LOG: /dev/stderr
        KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      ports:
        - 8000:8000 # expunerea porturilor
        - 8443:8443
      deploy:
        placement:
          constraints: [node.role == manager] # constrângerea de rulare doar pe manager, pentru a nu exista conflict la nivel de volume
      networks:
        - internal


secrets:
    DATABASE_URL:
        external: true
    JWT_SECRET:
        external: true

volumes:
    db-volume:
    postgres-data:
    pgadmin-data:

networks:
    internal:
    database:
    database-admin:

